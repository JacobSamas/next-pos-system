// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Category {
  id          String    @id @default(cuid())
  name        String    @unique
  description String?
  products    Product[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Product {
  id                 String        @id @default(cuid())
  name               String
  description        String?
  price              Float
  cost               Float?
  barcode            String?       @unique
  sku                String?       @unique
  stock              Int           @default(0)
  lowStockThreshold  Int           @default(10)
  isActive           Boolean       @default(true)
  categoryId         String
  category           Category      @relation(fields: [categoryId], references: [id])
  orderItems         OrderItem[]
  createdAt          DateTime      @default(now())
  updatedAt          DateTime      @updatedAt

  @@index([categoryId])
  @@index([barcode])
  @@index([sku])
}

model Customer {
  id          String   @id @default(cuid())
  firstName   String
  lastName    String
  email       String?  @unique
  phone       String?
  address     String?
  city        String?
  zipCode     String?
  dateOfBirth DateTime?
  loyaltyPoints Int    @default(0)
  isActive    Boolean  @default(true)
  orders      Order[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([email])
  @@index([phone])
}

model Order {
  id          String      @id @default(cuid())
  orderNumber String      @unique
  customerId  String?
  customer    Customer?   @relation(fields: [customerId], references: [id])
  subtotal    Float
  tax         Float       @default(0)
  discount    Float       @default(0)
  total       Float
  status      OrderStatus @default(PENDING)
  paymentMethod String?
  notes       String?
  items       OrderItem[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  @@index([customerId])
  @@index([orderNumber])
  @@index([status])
  @@index([createdAt])
}

model OrderItem {
  id        String  @id @default(cuid())
  orderId   String
  order     Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  productId String
  product   Product @relation(fields: [productId], references: [id])
  quantity  Int
  unitPrice Float
  total     Float
  createdAt DateTime @default(now())

  @@index([orderId])
  @@index([productId])
}

model PaymentMethod {
  id          String   @id @default(cuid())
  name        String   @unique
  description String?
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model TaxRate {
  id          String   @id @default(cuid())
  name        String   @unique
  rate        Float
  description String?
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model StoreSettings {
  id                   String   @id @default(cuid())
  storeName            String
  storeAddress         String?
  storePhone           String?
  storeEmail           String?
  currency             String   @default("USD")
  taxRate              Float    @default(0)

  // User Settings
  userName             String?
  userEmail            String?
  userRole             String   @default("admin")

  // Notifications
  emailNotifications   Boolean  @default(true)
  lowStockAlerts       Boolean  @default(true)
  dailyReports         Boolean  @default(false)
  customerUpdates      Boolean  @default(true)

  // Payment Settings
  acceptCash           Boolean  @default(true)
  acceptCard           Boolean  @default(true)
  acceptUPI            Boolean  @default(true)
  cardProcessorFee     Float    @default(2.9)

  // Receipt Settings
  receiptHeader        String?
  receiptFooter        String?
  printReceipts        Boolean  @default(true)
  emailReceipts        Boolean  @default(false)

  // System Settings
  autoBackup           Boolean  @default(true)
  backupFrequency      String   @default("daily")
  theme                String   @default("dark")
  language             String   @default("en")
  timezone             String   @default("America/New_York")

  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
}

enum OrderStatus {
  PENDING
  COMPLETED
  CANCELLED
  REFUNDED
}
